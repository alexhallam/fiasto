name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract version from CHANGELOG.md
        id: version
        run: |
          # Extract the latest version from CHANGELOG.md
          VERSION=$(grep -m 1 '^## \[' CHANGELOG.md | sed 's/^## \[\([^]]*\)\].*/\1/')
          
          # Validate version format (semver)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format '$VERSION'. Expected semver format (e.g., 1.0.0)"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
          
      - name: Check if version tag exists
        id: tag-check
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION does not exist"
          fi
          
      - name: Update Cargo.toml version
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Update Cargo.toml version to match changelog
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          echo "Updated Cargo.toml to version $VERSION"
          
      - name: Commit version update
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Cargo.toml
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git push origin main
          
      - name: Create git tag
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v$VERSION"
          git push origin "v$VERSION"
          
      - name: Create GitHub release
        if: steps.tag-check.outputs.exists == 'false'
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Skip release if tag exists
        if: steps.tag-check.outputs.exists == 'true'
        run: |
          echo "Release v${{ steps.version.outputs.version }} already exists, skipping"
